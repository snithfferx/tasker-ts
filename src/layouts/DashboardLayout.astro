---
import BaseLayout from './BaseLayout.astro';
import AuthGuard from '@Components/react/AuthGuard';
import UserProfile from '@Components/react/UserProfile';
import RealTimeSync from '@Components/react/RealTimeSync';

interface Props {
  title: string;
}

const { title } = Astro.props;
const currentPath = Astro.url.pathname;

// Navigation items
const navItems = [
  { name: 'Analytics', href: '/dashboard', icon: 'chart' },
  { name: 'Tasks', href: '/tasks', icon: 'tasks' },
  { name: 'Categories', href: '/categories', icon: 'tag' }
];

const isActivePage = (href: string) => {
  return currentPath === href || (href === '/dashboard' && currentPath === '/');
};
---

<BaseLayout title={`${title} | Tasker`}>
  <AuthGuard client:load>
    <div class="min-h-screen bg-gray-100">
    <!-- Navigation Header -->
    <header class="bg-white shadow">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center py-6">
          <!-- Page Title -->
          <div class="flex items-center space-x-4">
            <h1 class="text-3xl font-bold text-gray-900">{title}</h1>
          </div>
          
          <!-- Real-time Sync Status & User Profile -->
          <div class="flex items-center space-x-4">
            <RealTimeSync client:load className="hidden sm:flex" />
            <UserProfile client:load />
          </div>
        </div>
        
        <!-- Navigation Tabs -->
        <div class="border-t border-gray-200">
          <nav class="-mb-px flex space-x-8" aria-label="Tabs">
            {navItems.map((item) => {
              const isActive = isActivePage(item.href);
              return (
                <a
                  href={item.href}
                  class={`whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm transition-colors ${
                    isActive
                      ? 'border-indigo-500 text-indigo-600'
                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                  }`}
                >
                  <div class="flex items-center space-x-2">
                    {item.icon === 'chart' && (
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                      </svg>
                    )}
                    {item.icon === 'tasks' && (
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                      </svg>
                    )}
                    {item.icon === 'tag' && (
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.99 1.99 0 013 12V7a4 4 0 014-4z"></path>
                      </svg>
                    )}
                    <span>{item.name}</span>
                  </div>
                </a>
              );
            })}
          </nav>
        </div>
      </div>
    </header>
    
    <!-- Main Content -->
    <main class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
      <slot />
    </main>
    </div>
  </AuthGuard>
</BaseLayout>
