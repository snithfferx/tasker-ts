---
import DashboardLayout from '@Layouts/DashboardLayout.astro';
import CategoryList from '@Components/react/Categories';
import { verifyAuthentication, createAuthRedirect } from '@Utils/auth-server';

// Server-side authentication check
const authResult = await verifyAuthentication(Astro.cookies);
if (!authResult.isAuthenticated) {
  // Log the reason for debugging (remove in production)
  if (import.meta.env.DEV) {
    console.log('Categories page access denied:', authResult.error);
  }
  return createAuthRedirect('/auth/login');
}
---

<DashboardLayout title="Categories">
  <div class="space-y-6">
    <!-- Page Header -->
    <div class="bg-white dark:bg-gray-700 dark:text-gray-100 shadow rounded-lg p-6">
      <div class="flex items-center justify-between">
        <div>
          <h1 class="text-2xl font-bold text-gray-900 dark:text-white">Categories</h1>
          <p class="mt-1 text-sm text-gray-600 dark:text-gray-100">
            Organize your tasks with categories for better project management
          </p>
        </div>
        <div class="flex items-center space-x-2">
          <svg class="w-6 h-6 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.99 1.99 0 013 12V7a4 4 0 014-4z"></path>
          </svg>
        </div>
      </div>
    </div>

    <!-- Categories Management -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
      <!-- Category Management -->
      <div class="lg:col-span-2">
        <div class="bg-white dark:bg-gray-700 dark:text-gray-100 shadow rounded-lg p-6">
          <h2 class="text-lg font-medium text-gray-900 dark:text-gray-100 mb-4">Manage Categories</h2>
          <CategoryList client:load />
        </div>
      </div>

      <!-- Category Statistics and Info -->
      <div class="space-y-6">
        <!-- Quick Stats -->
        <div class="bg-white dark:bg-gray-700 dark:text-gray-100 shadow rounded-lg p-6">
          <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100 mb-4">Category Stats</h3>
          <div class="space-y-4">
            <div class="flex justify-between items-center">
              <span class="text-sm font-medium text-gray-600 dark:text-gray-100">Total Categories</span>
              <span class="text-lg font-semibold text-gray-900 dark:text-gray-100" id="total-categories">0</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-sm font-medium text-gray-600 dark:text-gray-100">Most Used</span>
              <span class="text-sm text-gray-900 dark:text-gray-100" id="most-used-category">-</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-sm font-medium text-gray-600 dark:text-gray-100">Tasks Categorized</span>
              <span class="text-lg font-semibold text-gray-900 dark:text-gray-100" id="categorized-tasks">0</span>
            </div>
          </div>
        </div>

        <!-- Usage Guidelines -->
        <div class="bg-gradient-to-br from-indigo-50 to-blue-50 dark:from-gray-600 dark:to-gray-800 dark:border-gray-700 dark:text-gray-100 border border-indigo-200 rounded-lg p-6">
          <h3 class="text-lg font-medium text-indigo-900 dark:text-gray-100 mb-3">Category Best Practices</h3>
          <ul class="space-y-2 text-sm text-indigo-800 dark:text-gray-100">
            <li class="flex items-start">
              <svg class="w-4 h-4 text-indigo-600 mt-0.5 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
              Keep category names short and descriptive
            </li>
            <li class="flex items-start">
              <svg class="w-4 h-4 text-indigo-600 mt-0.5 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
              Use categories to group similar tasks
            </li>
            <li class="flex items-start">
              <svg class="w-4 h-4 text-indigo-600 mt-0.5 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
              Create categories based on projects or contexts
            </li>
            <li class="flex items-start">
              <svg class="w-4 h-4 text-indigo-600 mt-0.5 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
              Review and clean up unused categories regularly
            </li>
          </ul>
        </div>

        <!-- Common Categories Suggestions -->
        <div class="bg-white dark:bg-gray-700 dark:text-gray-100 shadow rounded-lg p-6">
          <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100 mb-3">Suggested Categories</h3>
          <p class="text-sm text-gray-600 dark:text-gray-100 mb-4">Click to add these common categories:</p>
          <div class="grid grid-cols-2 gap-2">
            <button class="category-suggestion px-3 py-2 bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-100 text-sm rounded hover:bg-gray-200 transition-colors" data-category="Work">
              Work
            </button>
            <button class="category-suggestion px-3 py-2 bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-100 text-sm rounded hover:bg-gray-200 transition-colors" data-category="Personal">
              Personal
            </button>
            <button class="category-suggestion px-3 py-2 bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-100 text-sm rounded hover:bg-gray-200 transition-colors" data-category="Learning">
              Learning
            </button>
            <button class="category-suggestion px-3 py-2 bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-100 text-sm rounded hover:bg-gray-200 transition-colors" data-category="Health">
              Health
            </button>
            <button class="category-suggestion px-3 py-2 bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-100 text-sm rounded hover:bg-gray-200 transition-colors" data-category="Finance">
              Finance
            </button>
            <button class="category-suggestion px-3 py-2 bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-100 text-sm rounded hover:bg-gray-200 transition-colors" data-category="Home">
              Home
            </button>
            <button class="category-suggestion px-3 py-2 bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-100 text-sm rounded hover:bg-gray-200 transition-colors" data-category="Social">
              Social
            </button>
            <button class="category-suggestion px-3 py-2 bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-100 text-sm rounded hover:bg-gray-200 transition-colors" data-category="Creative">
              Creative
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Category Usage Overview -->
    <div class="bg-white dark:bg-gray-700 dark:text-gray-100 shadow rounded-lg p-6">
      <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100 mb-4">Category Usage</h3>
      <div class="text-sm text-gray-600 dark:text-gray-100 mb-4">
        This shows how your categories are being used across tasks and projects.
      </div>
      
      <!-- Placeholder for category usage chart -->
      <div class="h-32 bg-gray-50 rounded-lg flex items-center justify-center">
        <div class="text-center">
          <svg class="w-8 h-8 text-gray-400 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
          </svg>
          <p class="text-sm text-gray-500">Category usage analytics will appear here</p>
          <p class="text-xs text-gray-400 mt-1">Add categories and create tasks to see insights</p>
        </div>
      </div>
    </div>

    <!-- Help and Support -->
    <div class="bg-yellow-50 dark:bg-gray-700 dark:text-gray-100 border border-yellow-200 rounded-lg p-4">
      <div class="flex">
        <div class="flex-shrink-0">
          <svg class="w-5 h-5 text-yellow-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
        </div>
        <div class="ml-3">
          <h3 class="text-sm font-medium text-yellow-800">Getting Started with Categories</h3>
          <div class="mt-2 text-sm text-yellow-700">
            <p class="mb-2">Categories help you organize and filter your tasks effectively. Here's how to get started:</p>
            <ol class="list-decimal pl-5 space-y-1">
              <li>Add your first category using the form above</li>
              <li>When creating tasks, assign them to appropriate categories</li>
              <li>Use the search and filter features to find tasks by category</li>
              <li>Review analytics to see which categories you spend most time on</li>
            </ol>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Handle suggestion button clicks
    document.addEventListener('DOMContentLoaded', function() {
      const suggestionButtons = document.querySelectorAll('.category-suggestion') as NodeListOf<HTMLButtonElement>;
      
      suggestionButtons.forEach(button => {
        button.addEventListener('click', function() {
          const categoryName = this.getAttribute('data-category') as string;
          
          // Try to set the category name in the Categories component
          // This is a basic implementation - in practice, you'd want to communicate with the React component
          const categoryInput = document.querySelector('input[placeholder*="category"]') as HTMLInputElement || 
                               document.querySelector('input[placeholder*="Category"]') as HTMLInputElement ||
                               document.querySelector('input[placeholder*="name"]') as HTMLInputElement;
          
          if (categoryInput) {
            categoryInput.value = categoryName;
            categoryInput.focus();
            
            // Trigger input event for React to detect the change
            const event = new Event('input', { bubbles: true });
            categoryInput.dispatchEvent(event);
          }
          
          // Visual feedback
          this.classList.add('bg-indigo-100', 'text-indigo-700');
          setTimeout(() => {
            this.classList.remove('bg-indigo-100', 'text-indigo-700');
          }, 1000);
        });
      });

      // Update stats placeholders
      updateCategoryStats();
    });

	const totalCategories = document.getElementById('total-categories') as HTMLInputElement;
	const mostUseCategories = document.getElementById('most-used-category') as HTMLInputElement;
	const categorisedTask = document.getElementById('categorized-tasks') as HTMLInputElement;

    function updateCategoryStats() {
		// Placeholder function - in a real app, this would fetch actual data
		totalCategories.textContent = '0';
		mostUseCategories.textContent = 'None yet';
		categorisedTask.textContent = '0';
    }
  </script>
</DashboardLayout>
